{{!< default}}

{{!-- This template assumes your default.hbs provides:
    - Bulma CSS.
    - Font Awesome CSS.
    - Your FitVids.js script.
    - The opening and closing <body> tags.
--}}

{{#post}}
<main class="section">
  {{!-- Using a fluid container for a wide, immersive layout --}}
  <div class="container is-fluid">
    {{!-- MONETIZATION: 1. Top Leaderboard Ad --}}
    <div class="box has-background-white-ter has-text-centered mb-6 is-hidden-mobile">
        <p class="has-text-grey p-4">AdSense Leaderboard (728x90)</p>
    </div>

    <div class="columns is-variable is-6-desktop">

      {{!-- ======== Main Content Column ======== --}}
      <div class="column is-9">
        
        {{!-- The YouTube Video Player - Ready for FitVids.js --}}
        <div class="video-container mb-6">
            <iframe id="youtube-player" src="https://www.youtube.com/embed/{{custom_excerpt}}?rel=0&enablejsapi=1&color=white" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        </div>

        {{!-- Title, Meta, and Channel Info Block --}}
        <div class="box p-5">
            {{#if tags}}
                <div class="tags mb-4">
                    {{#foreach tags limit="3"}}<a class="tag is-link is-light" href="{{url}}">{{name}}</a>{{/foreach}}
                </div>
            {{/if}}
            <h1 class="title is-size-2-desktop is-size-3-mobile has-text-weight-bold post-title mb-4">{{title}}</h1>
            <hr class="my-5">
            <div class="level is-mobile">
                <div class="level-left">
                    <a href="{{primary_author.url}}" class="media is-align-items-center">
                        <figure class="media-left"><p class="image is-48x48"><img class="is-rounded" src="{{primary_author.profile_image}}" alt="{{primary_author.name}}"></p></figure>
                        <div class="media-content">
                            <p class="title is-6">{{primary_author.name}}</p>
                            <p class="subtitle is-7 has-text-grey">{{excerpt}} subscribers</p>
                        </div>
                    </a>
                </div>
                <div class="level-right">
                    <a href="#" class="button is-danger is-rounded has-text-weight-bold">
                        <span class="icon"><i class="fab fa-youtube"></i></span>
                        <span class="is-hidden-mobile">Subscribe</span>
                    </a>
                </div>
            </div>
        </div>
        
        {{!-- MONETIZATION: 2. Below Player Ad --}}
        <div class="box has-background-white-ter has-text-centered my-6">
            <p class="has-text-grey p-5">AdSense Responsive Ad Unit</p>
        </div>

        {{!-- Main Description Box --}}
        <div class="box p-6">
            <div class="content is-medium gh-content">
                {{content}}
            </div>
        </div>

        {{!-- Site Subscription CTA Widget --}}
        <div class="notification is-link is-light mt-6">
          <p class="title is-4">Enjoying the content?</p>
          <p class="subtitle is-6">Subscribe to my site to get the latest videos and articles delivered straight to your inbox.</p>
        </div>
        
      </div>

      {{!-- ======== Sidebar Column ======== --}}
      <div class="column is-3">
        <aside class="post-sidebar-sticky" style="position: static;">
        
          {{!-- MONETIZATION: 3. Sidebar Top Ad --}}
          <div class="box has-background-white-ter has-text-centered mb-6">
            <p class="has-text-grey p-6">AdSense Display Ad (300x250)</p>
          </div>
          
          {{!-- WIDGET 1: Timestamps (as a beautiful table) --}}
          <div id="timestamps-widget" class="box p-4 mb-6" style="display: none;">
            <p class="title is-5 mb-4">Timestamps</p>
            <div id="timestamps-target" class="table-container">
              {{!-- JS will inject a styled Bulma table here --}}
            </div>
          </div>
          
          {{!-- WIDGET 2: YouTube Schedule --}}
          <div class="box p-5 mb-6">
              <p class="title is-5 mb-4">My Upload Schedule</p>
              <div class="content is-small">
                  <p><strong>New Videos:</strong> Every Tuesday & Friday</p>
                  <p><strong>Live Streams:</strong> First Sunday of the month</p>
              </div>
          </div>

          {{!-- WIDGET 3: Related Videos --}}
          {{#get "posts" filter="tags:hash-video+id:-{{id}}" limit="3" as |related|}}
            {{#if related}}
            <div class="box p-5 mb-6">
              <p class="title is-5 mb-5">Related Videos</p>
                {{#foreach related}}
                  <a href="{{url}}" class="is-block mb-5">
                    <figure class="image is-16by9 mb-3"><img class="is-rounded" src="{{#if feature_image}}{{feature_image}}{{else}}https://i.ytimg.com/vi/{{custom_excerpt}}/hqdefault.jpg{{/if}}" alt="{{title}}" loading="lazy"></figure>
                    <p class="is-size-6 has-text-weight-bold">{{title}}</p>
                  </a>
                {{/foreach}}
            </div>
            {{/if}}
          {{/get}}
        </aside>
      </div>
    </div>
  </div>
</main>


{{!-- ================== JAVASCRIPT & SEO ================== --}}
<script src="https://www.youtube.com/iframe_api"></script>
<script>
    let player;
    let timestampDataForSeo = [];

    function onYouTubeIframeAPIReady() {
        if (document.getElementById('youtube-player')) {
            player = new YT.Player('youtube-player', { events: { 'onReady': onPlayerReady } });
        }
    }

    function onPlayerReady(event) {
        // Player is ready. The main script has already attached listeners.
    }
    
    document.addEventListener('DOMContentLoaded', () => {
        // ---- 1. Sticky Sidebar (Behavioral JS) ----
        const sidebar = document.querySelector('.post-sidebar-sticky');
        if (sidebar && window.innerWidth >= 1024) {
            sidebar.style.position = 'sticky';
            sidebar.style.top = '2rem';
        }

        // ---- 2. Dynamic Timestamps (Rendered as a Clickable Table) ----
        const generateTimestamps = () => {
            const sourceTable = document.querySelector('.gh-content table');
            const timestampWidget = document.getElementById('timestamps-widget');
            const timestampTarget = document.getElementById('timestamps-target');
            if (!sourceTable || !timestampWidget || !timestampTarget) return;

            const rows = sourceTable.querySelectorAll('tbody tr');
            if (rows.length === 0) return;
            
            const newTable = document.createElement('table');
            newTable.className = 'table is-fullwidth is-striped is-hoverable is-narrow';
            const tableBody = document.createElement('tbody');

            rows.forEach(row => {
                const cells = row.querySelectorAll('td, th');
                if (cells.length < 2) return;
                
                const timeStr = cells[0].textContent.trim().split(' ')[0];
                const parts = timeStr.split(':').map(part => parseInt(part, 10));
                let seconds = 0;
                if (parts.length === 3) seconds = parts[0] * 3600 + parts[1] * 60 + parts[2];
                else if (parts.length === 2) seconds = parts[0] * 60 + parts[1];
                
                const newRow = document.createElement('tr');
                newRow.className = 'is-clickable'; // Makes the whole row clickable
                newRow.dataset.time = seconds; // Store time on the row itself
                
                const timeCell = document.createElement('td');
                timeCell.innerHTML = `<span class="has-text-weight-semibold">${cells[0].textContent.trim()}</span>`;
                
                const descCell = document.createElement('td');
                descCell.textContent = cells[1].textContent.trim();

                newRow.appendChild(timeCell);
                newRow.appendChild(descCell);
                tableBody.appendChild(newRow);

                timestampDataForSeo.push({"@type": "Clip", "name": descCell.textContent, "startOffset": seconds, "url": window.location.href + `#t=${seconds}`});
            });
            
            // Add a single event listener to the table body for efficiency
            tableBody.addEventListener('click', (e) => {
                const clickedRow = e.target.closest('tr');
                if (!clickedRow || !clickedRow.dataset.time) return;

                const time = parseFloat(clickedRow.dataset.time);
                if (player && typeof player.seekTo === 'function') {
                    player.seekTo(time, true);
                    player.playVideo();
                }
            });

            newTable.appendChild(tableBody);
            timestampTarget.appendChild(newTable);
            timestampWidget.style.display = 'block';
            sourceTable.style.display = 'none';
        };
        
        // ---- 3. Dynamic JSON-LD Injection ----
        const injectSeoData = () => {
            const schemaScript = document.getElementById('video-schema');
            if (!schemaScript) return;
            let schema = JSON.parse(schemaScript.textContent);
            if (timestampDataForSeo.length > 0) schema.hasPart = timestampDataForSeo;
            schemaScript.textContent = JSON.stringify(schema, null, 2);
        };
        
        generateTimestamps();
        injectSeoData();
    });
</script>

{{!-- SEO: The single, definitive VideoObject Schema --}}
<script id="video-schema" type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "VideoObject",
  "name": "{{title}}",
  "description": "{{excerpt words="50"}}",
  "uploadDate": "{{date format="YYYY-MM-DDTHH:mm:ss.SSSZ"}}",
  "embedUrl": "https://www.youtube.com/embed/{{custom_excerpt}}",
  "thumbnailUrl": [
    {{#if feature_image}}"{{feature_image}}"{{else}}"https://i.ytimg.com/vi/{{custom_excerpt}}/maxresdefault.jpg"{{/if}}
  ],
  "author": { "@type": "Person", "name": "{{primary_author.name}}" }
}
</script>
{{/post}}