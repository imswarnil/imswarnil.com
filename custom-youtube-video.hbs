{{!< default}}

{{#post}}
<style>
    /* Add a subtle, professional background pattern to the hero */
    .post-hero-video {
        background-color: #2c3e50;
        background-image: linear-gradient(rgba(10, 10, 10, 0.8), rgba(10, 10, 10, 0.8)),
                          url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.04'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
    }

    /* Styles for the mobile timestamp accordion */
    #timestamps-widget-mobile .panel-content {
        display: none;
        border-top: 1px solid #dbdbdb;
    }
    #timestamps-widget-mobile.is-active .panel-content {
        display: block;
    }
    #timestamps-widget-mobile.is-active .panel-heading .icon {
        transform: rotate(180deg);
    }

    /* Responsive visibility for desktop vs mobile timestamps */
    @media (min-width: 769px) { /* Bulma's 'tablet' breakpoint */
        #timestamps-widget-mobile { display: none !important; }
    }
    @media (max-width: 768px) {
        #timestamps-widget-desktop { display: none !important; }
    }
</style>

{{!-- Cinematic Hero Section --}}
<section class="hero is-dark post-hero-video">
  <div class="hero-body">
    <div class="container">
      <div class="media is-align-items-center mb-4">
        {{#if primary_author.profile_image}}
          <figure class="media-left">
            <p class="image is-48x48">
              <img class="is-rounded" src="{{primary_author.profile_image}}" alt="{{primary_author.name}}">
            </p>
          </figure>
        {{/if}}
        <div class="media-content">
          <p class="is-size-6 has-text-weight-bold">{{primary_author.name}}</p>
          <p class="is-size-7 has-text-grey-light">
            Published on <time datetime="{{date format="YYYY-MM-DD"}}">{{date format="MMMM DD, YYYY"}}</time>
          </p>
        </div>
      </div>
      <h1 class="title is-size-1-desktop is-size-2-tablet is-size-3-mobile has-text-weight-bold post-title">
        {{title}}
      </h1>
      {{#if custom_excerpt}}
        <p class="subtitle is-size-5 has-text-grey-light">{{excerpt}}</p>
      {{/if}}
    </div>
  </div>
</section>

<main class="section">
  <div class="container">
    <div class="columns is-variable is-8-desktop">

      {{!-- ======== Main Content Column (Left) ======== --}}
      <div class="column is-8">
        <div class="box p-4 p-5-tablet">
          {{!-- The YouTube iframe now has rounded corners --}}
          <figure class="image is-16by9 mb-6" style="border-radius: 8px; overflow: hidden;">
            <iframe 
                id="youtube-player" {{!-- ID is crucial for the JS API --}}
                class="has-ratio"
                src="https://www.youtube.com/embed/{{custom_excerpt}}?rel=0&enablejsapi=1" {{!-- enablejsapi=1 is required --}}
                frameborder="0" 
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
                allowfullscreen>
            </iframe>
          </figure>
          
          {{!-- WIDGET: Mobile Timestamp Accordion (hidden on desktop) --}}
          <div id="timestamps-widget-mobile" class="panel is-link mb-6">
            <p class="panel-heading is-clickable">
              <span class="icon-text">
                <span class="icon"><i class="fas fa-list-ol"></i></span>
                <span>Video Timestamps</span>
              </span>
              <span class="icon"><i class="fas fa-angle-down"></i></span>
            </p>
            <div class="panel-content" id="timestamps-target-mobile"></div>
          </div>

          {{!-- The post content from the editor renders here --}}
          <div class="content post-content-body is-medium gh-content">
            {{content}}
          </div>
        </div>
      </div>

      {{!-- ======== Sidebar Column (Right) ======== --}}
      <div class="column is-4">
        <aside class="post-sidebar-sticky">
        
          {{!-- WIDGET 1: Desktop Timestamps (hidden on mobile) --}}
          <div id="timestamps-widget-desktop" class="panel is-link mb-5">
            <p class="panel-heading">Timestamps</p>
            <div id="timestamps-target-desktop"></div>
          </div>

          {{!-- WIDGET 2: Related Videos --}}
          {{#get "posts" filter="tags:hash-video+id:-{{id}}" limit="3" as |related|}}
            {{#if related}}
            <div class="box mb-5">
              <h3 class="title is-5 mb-4">Related Videos</h3>
                {{#foreach related}}
                  <a href="{{url}}" class="is-block mb-4">
                    <figure class="image is-16by9 mb-2">
                      {{#if feature_image}}
                        <img src="{{feature_image}}" alt="{{title}}" loading="lazy" style="border-radius: 6px;">
                      {{else}}
                        <img src="https://i.ytimg.com/vi/{{custom_excerpt}}/hqdefault.jpg" alt="{{title}}" loading="lazy" style="border-radius: 6px;">
                      {{/if}}
                    </figure>
                    <p class="is-size-6 has-text-weight-semibold has-text-dark" style="line-height: 1.3;">{{title}}</p>
                  </a>
                {{/foreach}}
            </div>
            {{/if}}
          {{/get}}

          {{!-- WIDGET 3: Sidebar Advertisement --}}
          <div class="box has-background-light has-text-centered">
            <p class="has-text-grey">Advertisement</p>
          </div>
        </aside>
      </div>
    </div>
  </div>
</main>


{{!-- ================== JAVASCRIPT & SEO ================== --}}
{{!-- 1. Load the YouTube IFrame Player API --}}
<script src="https://www.youtube.com/iframe_api"></script>

<script>
    // ---- Global variable for the player ----
    let player;

    // ---- This function is called by the YouTube API when it's ready ----
    function onYouTubeIframeAPIReady() {
        player = new YT.Player('youtube-player', {
            events: {
                'onReady': onPlayerReady
            }
        });
    }

    // ---- Helper function to parse time strings (e.g., "1:23") into seconds ----
    function parseTimeToSeconds(timeStr) {
        const parts = timeStr.split(':').map(part => parseInt(part, 10));
        let seconds = 0;
        if (parts.length === 3) { // HH:MM:SS
            seconds += parts[0] * 3600;
            seconds += parts[1] * 60;
            seconds += parts[2];
        } else if (parts.length === 2) { // MM:SS
            seconds += parts[0] * 60;
            seconds += parts[1];
        }
        return seconds;
    }

    // ---- The main logic runs after the player is ready and the DOM is loaded ----
    function onPlayerReady(event) {
        document.addEventListener('DOMContentLoaded', () => {
            // ---- 1. Make Sidebar Sticky ----
            const sidebar = document.querySelector('.post-sidebar-sticky');
            if (sidebar && window.innerWidth >= 769) {
                sidebar.style.position = 'sticky';
                sidebar.style.top = '2rem';
            }

            // ---- 2. Dynamic Timestamp Generation ----
            const desktopTarget = document.getElementById('timestamps-target-desktop');
            const mobileTarget = document.getElementById('timestamps-target-mobile');
            const mobileWidget = document.getElementById('timestamps-widget-mobile');
            const sourceTable = document.querySelector('.gh-content table');

            if (!desktopTarget || !mobileTarget || !sourceTable) {
                // If there's no table, hide the timestamp widgets completely
                document.getElementById('timestamps-widget-desktop').style.display = 'none';
                mobileWidget.style.display = 'none';
                return;
            }

            const rows = sourceTable.querySelectorAll('tbody tr');
            const fragment = document.createDocumentFragment();

            rows.forEach(row => {
                const cells = row.querySelectorAll('td, th');
                if (cells.length < 2) return;

                const timeStr = cells[0].textContent.trim().split(' ')[0]; // Handle "0:00 - 0:04"
                const seconds = parseTimeToSeconds(timeStr);
                
                const link = document.createElement('a');
                link.className = 'panel-block is-flex is-justify-content-space-between';
                link.href = '#'; // Prevent page jump
                link.dataset.time = seconds; // Store seconds in a data attribute

                link.innerHTML = `
                    <span class="has-text-weight-semibold">${cells[0].textContent.trim()}</span>
                    <span class="has-text-right is-size-7">${cells[1].textContent.trim()}</span>
                `;
                fragment.appendChild(link);
            });
            
            // Populate both desktop and mobile targets
            desktopTarget.appendChild(fragment.cloneNode(true));
            mobileTarget.appendChild(fragment);

            // Hide the original table
            sourceTable.style.display = 'none';

            // ---- 3. Add Click Listeners for Timestamps and Accordion ----
            function handleTimestampClick(e) {
                e.preventDefault();
                const targetLink = e.target.closest('a.panel-block');
                if (targetLink && targetLink.dataset.time) {
                    const time = parseFloat(targetLink.dataset.time);
                    player.seekTo(time, true);
                    player.playVideo();
                }
            }
            
            desktopTarget.addEventListener('click', handleTimestampClick);
            mobileTarget.addEventListener('click', handleTimestampClick);

            mobileWidget.querySelector('.panel-heading').addEventListener('click', () => {
                mobileWidget.classList.toggle('is-active');
            });
        });
    }
</script>


{{!-- 2. Dynamic JSON-LD SEO Schema for VideoObject --}}
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "VideoObject",
  "name": "{{title}}",
  "description": "{{excerpt}}",
  "uploadDate": "{{date format="YYYY-MM-DDTHH:mm:ss.SSSZ"}}",
  "embedUrl": "https://www.youtube.com/embed/{{custom_excerpt}}",
  {{#if feature_image}}
    "thumbnailUrl": "{{feature_image}}"
  {{else}}
    "thumbnailUrl": "https://i.ytimg.com/vi/{{custom_excerpt}}/maxresdefault.jpg"
  {{/if}},
  "author": {
    "@type": "Person",
    "name": "{{primary_author.name}}"
  }
}
</script>
{{/post}}